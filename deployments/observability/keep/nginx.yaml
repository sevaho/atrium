apiVersion: v1
kind: ConfigMap
metadata:
  name: keep-nginx-config
  namespace: observability
data:
  default.conf: |
    server {
        listen 80;
        server_name _;

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 3600s;
        proxy_buffering off;
        proxy_http_version 1.1;
        http2 off;

        if ($request_uri ~* ^(/websocket|/v2|/)(/|$)(.*)) {
           rewrite ^(/websocket|/v2|/)(/|$)(.*) /$3 break;
        }

        location ^~ /websocket {
          rewrite ^/websocket(/|$)(.*) /$2 break;
          proxy_pass http://keep-websocket:6001;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host $http_host;
          proxy_cache_bypass $http_upgrade;
        }

        location ~ ^/websocket(/|$)(.*) {
            proxy_pass http://keep-websocket:6001;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/v2(/|$)(.*) {
            proxy_pass http://keep-backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/(.*) {
            proxy_pass http://keep-frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keep-nginx
  namespace: observability
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
          - name: keep-nginx-config
            mountPath: /etc/nginx/conf.d
      volumes:
        - name: keep-nginx-config
          configMap:
            name: keep-nginx-config
            items:
              - key: default.conf
                path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: keep-nginx
  namespace: observability
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
